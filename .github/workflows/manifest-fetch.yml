name: Fetch Latest Manifests

on:
  push:
    paths-ignore:
    - 'README.md'
  pull_request:
    branches: [ master ]
  schedule:
    - cron: 0 * * * *

defaults:
  run:
    shell: pwsh

jobs:
  fetch-manifest:

    runs-on: windows-latest

    outputs:
      updated: ${{ steps.kyaru.outputs.flag }}
    steps:
    - uses: actions/checkout@v2
    - name: Checkout RediveData
      uses: actions/checkout@v2
      with:
        repository: "KiruyaMomochi/RediveData"
        path: "./RediveData"
    - name: Setup .NET Core 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    # - name: Setup .NET 5.0.100-rc.2.20479.15
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: 5.0.100-rc.2.20479.15
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Run
      run: dotnet run --project RediveExtract --configuration Release --no-restore -- --output RediveData
    - name: Set output for fetch database
      id: kyaru
      working-directory: "./RediveData"
      run: |
        if ((git status './manifest/masterdata_assetmanifest' -s) -or !(Test-Path db))
        {
          echo "output set"
          echo "::set-output name=flag::true"
        }
    - name: Commit files
      working-directory: "./RediveData"
      run: |
        if (git status -s)
        {
            $json = Get-Content ./config.json | ConvertFrom-Json
            $time = [System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId((Get-Date), 'Taipei Standard Time').ToString("yyyy-MM-dd HH:mm:ss")
            $message = "Manifest: $($json.Version -join '.')($($json.TruthVersion)) at $time"
            git status -s
            git config --global user.name 'KiruyaMomochi'
            git config --global user.email 'KiruyaMomochi@users.noreply.github.com'
            git add .
            git commit -m $message
            git push
        }

  fetch-database:

    runs-on: windows-latest

    needs: fetch-manifest
    if: ${{ needs.fetch-manifest.outputs.updated }}

    steps:
    - uses: actions/checkout@v2
    - name: Checkout RediveData
      uses: actions/checkout@v2
      with:
        repository: "RediveData"
        path: "./RediveData"
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        $choco = choco install sqlite &
        python -m pip install --upgrade pip
        python -m pip install UnityPy
        Wait-Job $choco
    - name: Run Script
      working-directory: "./RediveData"
      run: |
        pwsh ../Scripts/Export-RediveDB.ps1
    - name: Commit Files
      working-directory: "./RediveData"
      run: |
        if (git status -s)
        {
            $json = Get-Content ./config.json | ConvertFrom-Json
            $time = [System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId((Get-Date), 'Taipei Standard Time').ToString("yyyy-MM-dd HH:mm:ss")
            $message = "Database: $($json.Version -join '.')($($json.TruthVersion)) at $time"
            git status -s
            git config --global user.name 'KiruyaMomochi'
            git config --global user.email 'KiruyaMomochi@users.noreply.github.com'
            git add db/*
            git pull
            git commit -m $message
            git push
        }
    - name: Upload database
      uses: actions/upload-artifact@v2
      with:
        name: master-database
        path: |
          RediveData/*.sqlite
